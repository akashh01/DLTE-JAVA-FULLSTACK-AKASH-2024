server.port=8088
server.error.include-message=always
#enbales the colors for loggers
spring.output.ansi.enabled=always
logging.level.elements.spring.explore=INFO
# console pattern
logging.pattern.console=%clr([%level]){blue} %clr(%d){red} %c %clr(%t){yellow} %clr(%m%n){green}
# logs as file
logging.file.name=./logs/mybank-loans.log  
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=5
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
server.error.whitelabel.enabled=false

#LOAN AVAILABLE BEAN
EXV001=EXV001 :Value cannot be null
EXV002=EXV002 :Value should be positive
EXV003=EXV003 :Value should be in proper format
EXV004=EXV004 :Details should be in proper format  

loan.num.null=Loan number cannot be null
loan.num.invalid=Loan number invalid
loan.type.null=Loan type cannot be null
loan.type.invalid=Loan type invalid
loan.name.null=Loan name cannot be null
loan.name.invalid=Loan name invalid
loan.desc.null=Loan desc cannot be null
loan.desc.invalid=Loan desc invalid
loan.roi.null=Loan roi cannot be null
loan.roi.invalid=loan roi invalid
#SERVICES
no.loan.data=No loan available,sorry
loan.success.fetch=Successfully fetched all available loans
loan.exists.customer=Loan already exists for the customer
loan.apply.success=Loan has been successfully applied
start.loan.fetch=Executing query to fetch all available loans
db.fetch.error=Unable to retrieve data at the moment
no.service.exp=This service is currently unavailble
apply.loan.error=sql error during loan data input
#LOAN AVAILED
loan.avail.num.null=Loan available number is invalid
loan.customer.num.null=Customer number is invalid
loan.amount.null=Loan amount number is invalid
loan.emi.null=Loan emi is invalid
loan.tenure.null=Loan tenure is invalid
loan.avail.invalid=Loan available number is invalid
loan.customer.invalid=Invalid loan customer number

#AUTH
customer.sign.in=Unable to sign in
customer.db.sign.in=Unable to fetch data from db for sign in
customer.not.exist=this customer does not exist register new customer
customer.status.update=Customer status updated
customer.attempt.update=customer attempts updated
new.customer.signedup=new customer have been signed up
load.initiated=load by username initiated
find.user=find by username initiated
customer.filtered=filtering of customers done
no.customer=no customer filitered 